@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

.arena {
    @include card-base;
    padding: get($spacings, 2xl);
    text-align: center;
    border-radius: get($border-radius, xl);
    background: 
        linear-gradient(135deg, rgba(26, 5, 5, 0.95) 0%, $bg-primary 100%),
        repeating-linear-gradient(
            45deg,
            transparent,
            transparent 40px,
            rgba(74, 0, 0, 0.1) 40px,
            rgba(74, 0, 0, 0.1) 42px
        );
    border: 4px solid $crimson-shadow;
    box-shadow: 
        get($shadows, xl),
        get($shadows, void),
        get($shadows, blood),
        inset 0 1px 0 rgba(204, 102, 0, 0.15);
    position: relative;
    
    &::before {
        content: '';
        position: absolute;
        top: -4px;
        left: -4px;
        right: -4px;
        bottom: -4px;
        // background: linear-gradient(45deg, $crimson-shadow, $gore-red, $text-fire, $rust-red, $crimson-shadow);
        border-radius: get($border-radius, xl);
        z-index: -1;
        opacity: 0.8;
        animation: goreArenaGlow 6s ease-in-out infinite;
    }

    @include tablet {
        padding: get($spacings, xl);
        border-width: 3px;
        border-radius: get($border-radius, lg);
    }

    @include mobile {
        padding: get($spacings, lg);
        border-width: 2px;
        border-radius: get($border-radius, md);
    }

    @include xs {
        padding: get($spacings, md);
        border-width: 2px;
        border-radius: get($border-radius, sm);
    }
}

.arena-header {
    margin-bottom: get($spacings, 2xl);

    h3 {
        font-size: get($font-sizes, 3xl);
        font-weight: get($font-weights, bold);
        background: linear-gradient(135deg, $text-secondary 0%, $text-primary 40%, $text-muted 80%, $text-secondary 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: get($spacings, md);
        text-shadow: 0 0 25px rgba(204, 102, 0, 1.2), 0 0 40px rgba(139, 0, 0, 0.8);
        filter: drop-shadow(0 0 15px rgba(74, 0, 0, 1));
        font-family: $font-family-secondary;
        letter-spacing: 0.15em;

        @include tablet {
            font-size: get($font-sizes, 2xl);
            letter-spacing: 0.1em;
        }

        @include mobile {
            font-size: get($font-sizes, xl);
            letter-spacing: 0.08em;
            margin-bottom: get($spacings, sm);
        }

        @include xs {
            font-size: get($font-sizes, lg);
            letter-spacing: 0.05em;
        }
    }

    .arena-subtitle {
        color: $text-muted;
        font-size: get($font-sizes, lg);
        text-shadow: 0 0 8px rgba(0, 0, 0, 0.9);

        @include mobile {
            font-size: get($font-sizes, base);
        }

        @include xs {
            font-size: get($font-sizes, sm);
        }
    }

    @include tablet {
        margin-bottom: get($spacings, xl);
    }

    @include mobile {
        margin-bottom: get($spacings, lg);
    }

    @include xs {
        margin-bottom: get($spacings, md);
    }
}

.fighter-selection {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: get($spacings, 2xl);
    align-items: center;
    margin-bottom: get($spacings, 2xl);

    @include tablet {
        grid-template-columns: 1fr;
        gap: get($spacings, lg);
        margin-bottom: get($spacings, xl);
    }

    @include mobile {
        gap: get($spacings, md);
        margin-bottom: get($spacings, lg);
    }

    @include xs {
        gap: get($spacings, sm);
        margin-bottom: get($spacings, md);
    }
}

.fighter-select {
    text-align: center;

    h4 {
        color: $text-secondary;
        margin-bottom: get($spacings, md);
        font-weight: get($font-weights, semibold);
        text-transform: uppercase;
        letter-spacing: 0.05em;

        @include mobile {
            font-size: get($font-sizes, sm);
            margin-bottom: get($spacings, sm);
            letter-spacing: 0.03em;
        }

        @include xs {
            font-size: get($font-sizes, xs);
            margin-bottom: get($spacings, xs);
        }
    }
}

.hero-selector {
    background: rgba(255, 255, 255, 0.05);
    border: 2px solid rgba(255, 255, 255, 0.1);
    border-radius: get($border-radius, md);
    padding: get($spacings, md);
    color: $text-primary;
    font-size: get($font-sizes, base);
    cursor: pointer;
    transition: all get($transitions, normal);
    width: 100%;
    min-height: 44px; // Touch-friendly

    @include mobile {
        padding: get($spacings, sm) get($spacings, md);
        font-size: get($font-sizes, sm);
        min-height: 48px;
        border-radius: get($border-radius, sm);
    }

    @include xs {
        padding: get($spacings, xs) get($spacings, sm);
        font-size: get($font-sizes, xs);
        min-height: 44px;
    }

    &:focus {
        outline: none;
        border-color: $primary-gold;
        box-shadow: 0 0 0 4px rgba($primary-gold, 0.2);

        @include mobile {
            box-shadow: 0 0 0 3px rgba($primary-gold, 0.3);
        }
    }
}

.vs-divider {
    font-size: get($font-sizes, 5xl);
    font-weight: get($font-weights, black);
    background: linear-gradient(135deg, $text-secondary 0%, $text-muted 50%, $text-secondary 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 0 35px rgba(204, 102, 0, 1.5), 0 0 50px rgba(139, 0, 0, 1);
    filter: drop-shadow(0 0 20px rgba(74, 0, 0, 1.2));
    font-family: $font-family-secondary;

    @include tablet {
        transform: rotate(90deg);
        font-size: get($font-sizes, 3xl);
    }

    @include mobile {
        transform: rotate(90deg);
        font-size: get($font-sizes, 2xl);
    }

    @include xs {
        transform: rotate(90deg);
        font-size: get($font-sizes, xl);
    }
}

.fighters-display {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: get($spacings, 2xl);
    align-items: center;
    margin: get($spacings, 2xl) 0;

    @include tablet {
        grid-template-columns: 1fr;
        gap: get($spacings, lg);
        margin: get($spacings, xl) 0;
    }

    @include mobile {
        gap: get($spacings, md);
        margin: get($spacings, lg) 0;
    }

    @include xs {
        gap: get($spacings, sm);
        margin: get($spacings, md) 0;
    }
}

.fighter-display {
    text-align: center;
    padding: get($spacings, lg);
    background: linear-gradient(135deg, rgba(13, 13, 13, 0.9) 0%, rgba(5, 5, 5, 1) 100%);
    border-radius: get($border-radius, lg);
    border: 3px solid rgba(26, 26, 26, 0.6);
    transition: all get($transitions, normal);
    position: relative;
    box-shadow: 
        get($shadows, lg),
        inset 0 1px 0 rgba(212, 98, 26, 0.05);

    @include tablet {
        padding: get($spacings, md);
        border-width: 2px;
        border-radius: get($border-radius, md);
    }

    @include mobile {
        padding: get($spacings, sm);
        border-width: 2px;
        border-radius: get($border-radius, sm);
    }

    @include xs {
        padding: get($spacings, xs);
        border-width: 1px;
    }

    // Dark Souls combat states
    &.attacking {
        box-shadow: 
            0 0 25px rgba(212, 98, 26, 0.8),
            0 0 40px rgba(255, 107, 0, 0.6),
            get($shadows, fire);
        border-color: $text-muted;
        background: linear-gradient(135deg, rgba(212, 98, 26, 0.15) 0%, rgba(5, 5, 5, 1) 100%);
    }

    &.defending {
        animation: defendPulse 0.6s ease-in-out;
    }

    &.victory {
        animation: victoryGlow 1.5s ease-in-out;
        border-color: $text-secondary;
        background: linear-gradient(135deg, rgba(212, 98, 26, 0.1) 0%, rgba(5, 5, 5, 1) 100%);
    }

    &.defeat {
        animation: defeatFade 1.2s ease-out forwards;
    }
}

.fighter-avatar-large {
    width: 80px;
    height: 80px;
    margin: 0 auto get($spacings, md);
    border-radius: get($border-radius, lg);
    background: $bg-glass;
    @include flex-center;
    border: 2px solid rgba(255, 255, 255, 0.2);
    position: relative;
    overflow: hidden;

    @include tablet {
        width: 70px;
        height: 70px;
        margin-bottom: get($spacings, sm);
    }

    @include mobile {
        width: 60px;
        height: 60px;
        margin-bottom: get($spacings, sm);
        border-radius: get($border-radius, md);
    }

    @include xs {
        width: 50px;
        height: 50px;
        margin-bottom: get($spacings, xs);
        border-radius: get($border-radius, sm);
        border-width: 1px;
    }

    img {
        width: 90%;
        height: 90%;
        object-fit: cover;
        object-position: center;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .avatar-placeholder {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: $primary-gradient;
        border-radius: get($border-radius, lg) - 2px;
        @include flex-center;
        color: $text-white;
        font-weight: get($font-weights, bold);
        font-size: get($font-sizes, 2xl);
        letter-spacing: 1px;

        @include tablet {
            font-size: get($font-sizes, xl);
            border-radius: get($border-radius, md) - 2px;
        }

        @include mobile {
            font-size: get($font-sizes, lg);
            border-radius: get($border-radius, sm) - 1px;
        }

        @include xs {
            font-size: get($font-sizes, base);
            border-radius: get($border-radius, sm) - 1px;
        }
    }
}

.fighter-name {
    font-size: get($font-sizes, xl);
    font-weight: get($font-weights, bold);
    color: $text-primary;
    margin-bottom: get($spacings, sm);

    @include tablet {
        font-size: get($font-sizes, lg);
    }

    @include mobile {
        font-size: get($font-sizes, base);
        margin-bottom: get($spacings, xs);
    }

    @include xs {
        font-size: get($font-sizes, sm);
    }
}

.health-bar {
    background: linear-gradient(135deg, rgba(5, 5, 5, 0.9), rgba(13, 13, 13, 1));
    height: 24px;
    border-radius: get($border-radius, md);
    overflow: hidden;
    position: relative;
    margin-top: get($spacings, md);
    border: 2px solid rgba(26, 26, 26, 0.8);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.95);

    @include tablet {
        height: 20px;
        margin-top: get($spacings, sm);
        border-radius: get($border-radius, sm);
    }

    @include mobile {
        height: 18px;
        border-width: 1px;
    }

    @include xs {
        height: 16px;
        margin-top: get($spacings, xs);
    }

    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(212, 98, 26, 0.3), transparent);
        animation: healthGlint 4s infinite;
    }
}

.health-fill {
    background: linear-gradient(90deg, $heal-color, #0f1f0f);
    height: 100%;
    border-radius: get($border-radius, md);
    transition: width 0.5s ease;
    box-shadow: 0 0 10px rgba(26, 58, 26, 0.8);
}

.health-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-weight: get($font-weights, bold);
    color: $text-white;
    font-size: get($font-sizes, sm);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);

    @include mobile {
        font-size: get($font-sizes, xs);
    }

    @include xs {
        font-size: 10px;
    }
}

// Additional arena classes
.arena-actions {
    margin: get($spacings, 2xl) 0;
}

.fight-btn {
    margin-right: get($spacings, lg);
}

.fighter-placeholder {
    color: $text-muted;
    font-size: get($font-sizes, 4xl);
}

.hero-class-empty {
    background: rgba(255, 255, 255, 0.1);
}

// Boutons d'arène stabilisés - Règles spécifiques pour les boutons de combat
.arena .btn,
#fightBtn,
#createBtn,
.btn[onclick*="resetArena"],
.btn[onclick*="stopCombat"],
.btn[onclick*="randomStats"],
.btn[onclick*="createHeroFromForm"] {
    // IMPORTANT : Supprimer toutes les transformations qui causent des problèmes
    &:hover {
        transform: none !important;
        // Effet visuel stable sans déplacement
        background: 
            linear-gradient(135deg, #e6c15f 0%, #d4af37 50%, #e6c15f 100%);
        border-color: $primary-gold;
        box-shadow: 
            0 0 15px rgba(212, 175, 55, 0.5),
            0 4px 12px rgba(0, 0, 0, 0.3),
            inset 0 1px 0 rgba(255, 248, 225, 0.6);
    }
    
    &:active {
        transform: none !important;
        // Effet de clic sans déplacement
        background: 
            linear-gradient(135deg, #c9a732 0%, #b8962e 50%, #c9a732 100%);
        box-shadow: 
            0 2px 6px rgba(0, 0, 0, 0.4),
            inset 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    &:disabled {
        opacity: 0.6;
        filter: grayscale(0.3);
        transform: none !important;
    }

    // Supprimer l'effet de brillance mobile pour éviter les problèmes
    &::before {
        display: none;
    }
}

// ========== INTERFACE DE SÉLECTION DE HÉROS MODERNE ==========

.hero-selector-modern {
    position: relative;
    width: 100%;
}

.selected-hero-display {
    display: flex;
    align-items: center;
    gap: get($spacings, md);
    padding: get($spacings, md);
    background: linear-gradient(135deg, rgba(15, 15, 15, 0.9) 0%, rgba(25, 25, 25, 0.8) 100%);
    border: 2px solid rgba(212, 175, 55, 0.3);
    border-radius: get($border-radius, lg);
    cursor: pointer;
    transition: all get($transitions, normal);
    min-height: 70px;
    position: relative;
    overflow: hidden;
    
    @include mobile {
        padding: get($spacings, sm);
        min-height: 60px;
        gap: get($spacings, sm);
    }
    
    &:hover {
        border-color: $primary-gold;
        background: linear-gradient(135deg, rgba(20, 20, 20, 0.9) 0%, rgba(30, 30, 30, 0.8) 100%);
        box-shadow: 0 0 15px rgba(212, 175, 55, 0.3);
    }
    
    &.active {
        border-color: $primary-gold;
        box-shadow: 0 0 20px rgba(212, 175, 55, 0.4);
    }
    
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(212, 175, 55, 0.1), transparent);
        transition: left 0.6s ease;
    }
    
    &:hover::before {
        left: 100%;
    }
}

.hero-preview-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(212, 175, 55, 0.2) 0%, rgba(180, 140, 40, 0.1) 100%);
    border: 2px solid rgba(212, 175, 55, 0.4);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    overflow: hidden;
    
    @include mobile {
        width: 40px;
        height: 40px;
    }
    
    img {
        width: 90%;
        height: 90%;
        object-fit: cover;
        object-position: center;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    
    .preview-placeholder {
        color: $primary-gold;
        font-size: get($font-sizes, xl);
        font-weight: get($font-weights, bold);
        
        @include mobile {
            font-size: get($font-sizes, lg);
        }
    }
}

.hero-preview-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: get($spacings, xs);
}

.hero-preview-name {
    color: $text-primary;
    font-weight: get($font-weights, semibold);
    font-size: get($font-sizes, base);
    
    @include mobile {
        font-size: get($font-sizes, sm);
    }
}

.hero-preview-class {
    color: $text-secondary;
    font-size: get($font-sizes, sm);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    
    @include mobile {
        font-size: get($font-sizes, xs);
    }
}

.hero-preview-stats {
    display: flex;
    gap: get($spacings, sm);
    font-size: get($font-sizes, xs);
    color: $text-muted;
    
    .stat-mini {
        display: flex;
        align-items: center;
        gap: 2px;
        
        .stat-icon {
            font-size: 10px;
        }
    }
}

.selector-arrow {
    color: $primary-gold;
    font-size: get($font-sizes, sm);
    transition: transform get($transitions, normal);
    flex-shrink: 0;
    
    .active & {
        transform: rotate(180deg);
    }
}

.hero-options-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: linear-gradient(135deg, rgba(10, 10, 10, 0.98) 0%, rgba(20, 20, 20, 0.95) 100%);
    border: 2px solid $primary-gold;
    border-top: none;
    border-radius: 0 0 get($border-radius, lg) get($border-radius, lg);
    box-shadow: 
        0 8px 24px rgba(0, 0, 0, 0.6),
        0 0 30px rgba(212, 175, 55, 0.2);
    backdrop-filter: blur(20px);
    max-height: 300px;
    overflow-y: auto;
    z-index: 1000;
    animation: dropdownSlideIn 0.3s ease;
    
    @include mobile {
        max-height: 250px;
    }
    
    // Scrollbar personnalisée
    &::-webkit-scrollbar {
        width: 6px;
    }
    
    &::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.3);
    }
    
    &::-webkit-scrollbar-thumb {
        background: rgba(212, 175, 55, 0.6);
        border-radius: 3px;
        
        &:hover {
            background: rgba(212, 175, 55, 0.8);
        }
    }
}

.hero-option-card {
    display: flex;
    align-items: center;
    gap: get($spacings, md);
    padding: get($spacings, md);
    cursor: pointer;
    transition: all get($transitions, normal);
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    
    @include mobile {
        padding: get($spacings, sm);
        gap: get($spacings, sm);
    }
    
    &:last-child {
        border-bottom: none;
        border-radius: 0 0 get($border-radius, lg) get($border-radius, lg);
    }
    
    &:hover {
        background: linear-gradient(135deg, rgba(212, 175, 55, 0.1) 0%, rgba(180, 140, 40, 0.05) 100%);
        
        .hero-option-avatar {
            border-color: $primary-gold;
            box-shadow: 0 0 10px rgba(212, 175, 55, 0.4);
        }
        
        .hero-option-name {
            color: $primary-gold;
        }
    }
    
    &.disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background: rgba(200, 0, 0, 0.1);
        
        &:hover {
            background: rgba(200, 0, 0, 0.1);
            
            .hero-option-avatar {
                border-color: rgba(255, 255, 255, 0.2);
                box-shadow: none;
            }
            
            .hero-option-name {
                color: $text-muted;
            }
        }
    }
}

.hero-option-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.2);
    overflow: hidden;
    flex-shrink: 0;
    
    @include mobile {
        width: 35px;
        height: 35px;
    }
    
    img {
        width: 90%;
        height: 90%;
        object-fit: cover;
        object-position: center;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}

.hero-option-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: get($spacings, xs);
}

.hero-option-name {
    color: $text-primary;
    font-weight: get($font-weights, semibold);
    font-size: get($font-sizes, sm);
    
    @include mobile {
        font-size: get($font-sizes, xs);
    }
}

.hero-option-details {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: get($spacings, sm);
}

.hero-option-class {
    color: $text-secondary;
    font-size: get($font-sizes, xs);
    text-transform: uppercase;
    letter-spacing: 0.03em;
    
    @include mobile {
        font-size: 10px;
    }
}

.hero-option-level {
    color: $primary-gold;
    font-size: get($font-sizes, xs);
    font-weight: get($font-weights, semibold);
    background: rgba(212, 175, 55, 0.1);
    padding: 2px 6px;
    border-radius: get($border-radius, sm);
    
    @include mobile {
        font-size: 10px;
        padding: 1px 4px;
    }
}

.hero-option-health {
    display: flex;
    align-items: center;
    gap: get($spacings, xs);
    font-size: get($font-sizes, xs);
    color: $text-muted;
    
    @include mobile {
        font-size: 10px;
    }
    
    .health-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        
        &.healthy { background: $success; }
        &.wounded { background: $warning; }
        &.critical { background: $error; }
    }
}

// Fallback - cacher l'ancien sélecteur
.hero-selector.hidden {
    display: none;
}

// Corrections spécifiques pour les sélecteurs de héros
.hero-selector {
    &:focus {
        transform: none;
    }
}

// Animation pour l'ouverture du dropdown
@keyframes dropdownSlideIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

// Animations de combat plus subtiles
@keyframes defendPulse {
    0%, 100% { 
        opacity: 1;
        box-shadow: 0 0 0 0 rgba($info, 0.4);
    }
    50% { 
        opacity: 0.8;
        box-shadow: 0 0 0 10px rgba($info, 0.1);
    }
}

@keyframes victoryGlow {
    0%, 100% { 
        box-shadow: 0 0 20px rgba($success, 0.3);
    }
    50% { 
        box-shadow: 
            0 0 30px rgba($success, 0.6),
            0 0 50px rgba($success, 0.3);
    }
}

@keyframes defeatFade {
    0% { 
        opacity: 1;
        filter: grayscale(0);
    }
    100% { 
        opacity: 0.4;
        filter: grayscale(0.8);
    }
}

@keyframes healthGlint {
    0% { left: -100%; }
    100% { left: 100%; }
}

@keyframes goreArenaGlow {
    0%, 100% { 
        background: linear-gradient(45deg, $crimson-shadow, $gore-red, $text-fire, $rust-red, $crimson-shadow);
        opacity: 0.8;
        filter: brightness(1.0);
    }
    25% { 
        background: linear-gradient(45deg, $gore-red, $text-fire, $rust-red, $dried-blood, $gore-red);
        opacity: 0.6;
        filter: brightness(1.3);
    }
    50% { 
        background: linear-gradient(45deg, $text-fire, $rust-red, $crimson-shadow, $gore-red, $text-fire);
        opacity: 1.0;
        filter: brightness(0.8);
    }
    75% { 
        background: linear-gradient(45deg, $rust-red, $crimson-shadow, $gore-red, $text-fire, $rust-red);
        opacity: 0.7;
        filter: brightness(1.1);
    }
}