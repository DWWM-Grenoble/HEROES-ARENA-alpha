@use '../abstracts/variables'as *;
@use '../abstracts/mixins'as *;

// ========== COMPOSANT MODAL : components/_modal.scss ==========

.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    @include flex-center;
    align-items: flex-start;
    z-index: get($z-indexes, modal);
    padding: get($spacings, lg);
    overflow-y: auto;
    opacity: 0;
    animation: modalFadeIn 0.3s ease forwards;

    @include tablet {
        padding: get($spacings, md);
    }

    @include mobile {
        padding: get($spacings, xs);
        align-items: flex-start;
        padding-top: get($spacings, lg);
    }

    @include xs {
        padding: get($spacings, xs);
    }
}

.modal-content {
    background: linear-gradient(135deg, rgba(26, 22, 18, 0.98), $bg-primary),
        repeating-linear-gradient(45deg,
            transparent,
            transparent 30px,
            rgba(212, 175, 55, 0.03) 30px,
            rgba(212, 175, 55, 0.03) 32px);
    border-radius: get($border-radius, lg);
    border: 4px solid $gold-bronze;
    box-shadow:
        get($shadows, xl),
        get($shadows, gold),
        0 0 30px rgba(212, 175, 55, 0.3),
        inset 0 1px 0 rgba(248, 245, 240, 0.1);
    backdrop-filter: blur(20px);
    max-width: 800px;
    width: 100%;
    margin: get($spacings, 2xl) auto;
    transform: translateY(get($spacings, lg));
    animation: modalSlideIn 0.3s ease forwards;
    position: relative;

    &::before {
        content: '';
        position: absolute;
        top: -4px;
        left: -4px;
        right: -4px;
        bottom: -4px;
        background: linear-gradient(45deg, $rust-red, $gore-red, $text-fire, $dried-blood, $rust-red);
        border-radius: get($border-radius, lg);
        z-index: -1;
        opacity: 0.4;
    }

    @include tablet {
        max-width: 600px;
        margin: get($spacings, xl) auto;
        border-width: 3px;
    }

    @include mobile {
        max-width: 95vw;
        width: 95vw;
        margin: get($spacings, sm) auto;
        border-width: 2px;
        border-radius: get($border-radius, md);
        backdrop-filter: blur(15px);
        max-height: 85vh;
        overflow-y: auto;
    }

    @include xs {
        margin: get($spacings, md) auto;
        border-radius: get($border-radius, sm);
        backdrop-filter: blur(10px);
    }
}

.modal-header {
    position: relative;
    padding: get($spacings, lg) 50px get($spacings, lg) get($spacings, lg);
    border-bottom: 1px solid rgba(71, 85, 105, 0.3);

    @include tablet {
        padding: get($spacings, md) 45px get($spacings, md) get($spacings, md);
    }

    @include mobile {
        padding: get($spacings, md) 40px get($spacings, md) get($spacings, md);
    }

    @include xs {
        padding: get($spacings, sm) 35px get($spacings, sm) get($spacings, sm);
    }
}

.modal-close {
    position: absolute;
    top: get($spacings, md);
    right: get($spacings, md);
    width: 32px;
    height: 32px;
    background: rgba($error, 0.8);
    color: white;
    border: none;
    border-radius: $border-radius-round;
    font-size: 18px;
    font-weight: get($font-weights, bold);
    cursor: pointer;
    @include flex-center;
    transition: all get($transitions, normal);
    z-index: 10;
    line-height: 1;
    min-height: 44px; // Touch-friendly
    min-width: 44px;

    @include tablet {
        width: 30px;
        height: 30px;
        min-height: 42px;
        min-width: 42px;
        font-size: 16px;
    }

    @include mobile {
        width: 28px;
        height: 28px;
        min-height: 48px; // Larger touch target on mobile
        min-width: 48px;
        font-size: 16px;
        top: get($spacings, sm);
        right: get($spacings, sm);
    }

    @include xs {
        width: 26px;
        height: 26px;
        min-height: 44px;
        min-width: 44px;
        font-size: 14px;
    }

    &:hover {
        background: $error;
        transform: scale(1.1);
        box-shadow: 0 4px 12px rgba($error, 0.3);

        @include mobile {
            transform: scale(1.05); // Less aggressive on mobile
        }
    }

    &:active {
        transform: scale(0.95);
    }
}

.modal-footer {
    margin-top: get($spacings, lg);
    padding: get($spacings, lg);
    border-top: 1px solid rgba(71, 85, 105, 0.3);
    text-align: center;
    position: relative;
    z-index: 10;
}

.modal-close-btn {
    min-width: 120px;
}

// Actions Modal
.modal-actions {
    margin: get($spacings, xl) 0 get($spacings, lg) 0;
    padding: get($spacings, lg);
    background: rgba(15, 23, 42, 0.5);
    border-radius: get($border-radius, md);
    border: 1px solid $bg-glass;

    h3 {
        color: $text-primary;
        margin-bottom: get($spacings, md);
        font-size: get($font-sizes, lg);
        font-weight: get($font-weights, semibold);
    }
}

.action-buttons {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: get($spacings, sm);

    @include tablet {
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    }

    @include mobile {
        grid-template-columns: 1fr;
        gap: get($spacings, sm);
    }
}

.action-btn {
    display: flex;
    align-items: center;
    padding: get($spacings, md);
    background: $bg-card;
    border: 1px solid $bg-glass;
    border-radius: get($border-radius, sm);
    color: $text-primary;
    cursor: pointer;
    transition: all get($transitions, normal);
    text-align: left;
    min-height: 44px; // Touch-friendly

    @include tablet {
        padding: get($spacings, sm) get($spacings, md);
    }

    @include mobile {
        padding: get($spacings, sm);
        min-height: 48px; // Larger touch target on mobile
    }

    &:hover {
        transform: translateY(-2px);
        border-color: rgba(255, 255, 255, 0.2);
        box-shadow: get($shadows, lg);

        @include mobile {
            transform: translateY(-1px); // Less aggressive on mobile
        }
    }

    .action-icon {
        font-size: get($font-sizes, xl);
        margin-right: get($spacings, sm);
        min-width: 32px;
        text-align: center;

        @include mobile {
            font-size: get($font-sizes, lg);
            margin-right: get($spacings, sm);
            min-width: 28px;
        }
    }

    .action-text {
        width: 300px;
        @include flex-column;
        gap: 2px;

        @include mobile {
            width: auto;
            flex: 1;
        }

        strong {
            margin: 1px;
            font-weight: get($font-weights, semibold);
            font-size: 0.95rem;

            @include mobile {
                font-size: 0.9rem;
            }
        }

        small {
            color: $text-secondary;
            font-size: get($font-sizes, sm);

            @include mobile {
                font-size: get($font-sizes, xs);
            }
        }
    }

    // Action button variants
    &.heal-btn:hover {
        background: rgba($success, 0.1);
        border-color: rgba($success, 0.3);

        .action-icon {
            transform: scale(1.1);
        }
    }

    &.combat-btn:hover {
        background: rgba($info, 0.1);
        border-color: rgba($info, 0.3);

        .action-icon {
            transform: scale(1.1);
        }
    }

    &.rename-btn:hover {
        background: rgba($warning, 0.1);
        border-color: rgba($warning, 0.3);

        .action-icon {
            transform: scale(1.1);
        }
    }

    &.delete-btn {
        margin-left: 150px;
        text-align: center;
        padding: 5px;
        justify-content: center;
        width: fit-content;
        height: 70px;
        background: rgba($bg-secondary, 0.9);
        border: 1px solid rgba($error, 0.2);
        position: relative;
        overflow: hidden;

        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba($error, 0.1), transparent);
            transition: left 0.5s ease;
        }

        &:hover {
            &::before {
                left: 100%;
            }

            background: rgba($error, 0.15);
            border-color: rgba($error, 0.4);
            color: #fecaca;
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba($error, 0.2);

            .action-icon {
                color: $error;
                transform: scale(1.15) rotate(5deg);
                text-shadow: 0 0 15px rgba($error, 0.5);
            }

            .action-text strong {
                color: $error;
            }

            .action-text small {
                color: #f87171;
            }
        }

        .action-icon {
            margin-left: 25px;
            color: #f87171;
            font-size: 1.6rem;
            font-weight: bold;
            text-shadow: 0 0 10px rgba($error, 0.3);
            transition: all get($transitions, normal);
        }

        .action-text {
            strong {
                color: #f87171;
                font-weight: get($font-weights, bold);
                letter-spacing: 0.5px;
            }

            small {
                color: #fca5a5;
                font-weight: get($font-weights, medium);
                font-style: italic;
            }
        }
    }
}

// Experience Bar
.xp-section {
    margin: 15px 0;
}

.xp-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: get($spacings, sm);
    font-weight: get($font-weights, semibold);
    color: $text-primary;
}

.xp-values {
    color: #fbbf24;
    font-weight: get($font-weights, bold);
    text-shadow: 0 0 10px rgba(251, 191, 36, 0.3);
}

.xp-bar {
    position: relative;
    background: rgba(15, 23, 42, 0.8);
    border: 1px solid rgba(251, 191, 36, 0.3);
    border-radius: get($border-radius, md);
    height: 24px;
    overflow: hidden;
    margin-bottom: get($spacings, sm);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
}

.xp-fill {
    height: 100%;
    background: linear-gradient(90deg, #fbbf24, #f59e0b, #fbbf24);
    background-size: 200% 100%;
    animation: xp-shimmer 2s ease-in-out infinite;
    border-radius: get($border-radius, md);
    box-shadow: 0 0 15px rgba(251, 191, 36, 0.4);
    transition: width 0.5s ease;
}

.xp-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: get($font-sizes, sm);
    font-weight: get($font-weights, semibold);
    color: #0f172a;
    text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
    z-index: 2;
}

.level-info {
    text-align: center;
    color: $text-secondary;
    font-size: get($font-sizes, xs);
    font-style: italic;
}

// Animations
@keyframes modalFadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes modalSlideIn {
    from {
        transform: translateY(get($spacings, lg));
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes xp-shimmer {

    0%,
    100% {
        background-position: 200% 0;
    }

    50% {
        background-position: -200% 0;
    }
}

// Hero Detail Modal
.hero-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    @include flex-center;
    z-index: get($z-indexes, modal);
    padding: get($spacings, lg);
}

.hero-modal {
    background: linear-gradient(135deg, rgba(26, 22, 37, 0.95), rgba(15, 10, 26, 0.98));
    border: 3px solid $primary-crimson;
    border-radius: get($border-radius, lg);
    box-shadow:
        get($shadows, xl),
        get($shadows, crimson),
        0 0 30px rgba(199, 166, 21, 0.3);
    backdrop-filter: blur(20px);
    max-width: 900px;
    width: 90%;
    max-height: 85vh;
    overflow-y: auto;
    position: relative;

    &::before {
        content: '';
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        background: linear-gradient(45deg, $primary-crimson, $primary-mystic, $primary-gold);
        border-radius: get($border-radius, lg);
        z-index: -1;
        opacity: 0.3;
    }

    @include tablet {
        max-width: 700px;
        width: 95%;
        max-height: 90vh;
        border-width: 2px;
    }

    @include mobile {
        width: 95%;
        max-height: 90vh;
        border-radius: get($border-radius, md);
        backdrop-filter: blur(15px);
    }

    @include xs {
        width: 98%;
        max-height: 95vh;
        border-radius: get($border-radius, sm);
        backdrop-filter: blur(10px);
    }
}

.hero-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: get($spacings, lg);
    border-bottom: 1px solid rgba($primary-bronze, 0.3);

    @include tablet {
        padding: get($spacings, md);
    }

    @include mobile {
        padding: get($spacings, sm) get($spacings, md);
        flex-direction: column;
        gap: get($spacings, sm);
        text-align: center;
    }

    h2 {
        margin: 0;
        font-size: get($font-sizes, 3xl);
        font-weight: get($font-weights, bold);
        color: $text-primary;
        font-family: $font-family-secondary;
        text-transform: uppercase;
        letter-spacing: 0.1em;

        @include tablet {
            font-size: get($font-sizes, 2xl);
        }

        @include mobile {
            font-size: get($font-sizes, xl);
            letter-spacing: 0.08em;
        }

        @include xs {
            font-size: get($font-sizes, lg);
            letter-spacing: 0.05em;
        }
    }
}

.hero-modal-content {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: get($spacings, xl);
    padding: get($spacings, lg);

    @include tablet {
        grid-template-columns: 1fr;
        gap: get($spacings, lg);
        padding: get($spacings, md);
    }

    @include mobile {
        gap: get($spacings, md);
        padding: get($spacings, sm) get($spacings, md);
    }

    @include xs {
        gap: get($spacings, sm);
        padding: get($spacings, xs) get($spacings, sm);
    }
}

.hero-modal-left {
    @include flex-column;
    align-items: center;
    gap: get($spacings, lg);
    padding: get($spacings, lg);
    background: rgba(139, 21, 56, 0.15);
    border-radius: get($border-radius, lg);
    border: 1px solid rgba(199, 166, 21, 0.3);
    box-shadow: inset 0 1px 0 rgba(199, 166, 21, 0.1);

    @include tablet {
        padding: get($spacings, md);
        gap: get($spacings, md);
    }

    @include mobile {
        padding: get($spacings, sm) get($spacings, md);
        gap: get($spacings, sm);
        border-radius: get($border-radius, md);
    }

    @include xs {
        padding: get($spacings, xs) get($spacings, sm);
        border-radius: get($border-radius, sm);
    }

    // Taille réduite pour l'image de détail
    .hero-avatar-large {
        width: 100px !important;
        height: 100px !important;
        min-width: 100px !important;
        min-height: 100px !important;
        max-width: 100px !important;
        max-height: 100px !important;
        border-radius: get($border-radius, lg);
        background: $bg-glass;
        border: 3px solid $primary-bronze;
        position: relative;
        overflow: hidden;
        flex-shrink: 0;
        flex-grow: 0;
        box-shadow:
            0 8px 16px rgba(0, 0, 0, 0.4),
            inset 0 1px 0 rgba($primary-gold, 0.3);

        img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100% !important;
            height: 100% !important;
            object-fit: cover;
            object-position: center;
            border-radius: calc(#{get($border-radius, lg)} - 3px);
        }

        @include tablet {
            width: 90px !important;
            height: 90px !important;
            min-width: 90px !important;
            min-height: 90px !important;
            max-width: 90px !important;
            max-height: 90px !important;
        }

        @include mobile {
            width: 80px !important;
            height: 80px !important;
            min-width: 80px !important;
            min-height: 80px !important;
            max-width: 80px !important;
            max-height: 80px !important;
        }

        @include xs {
            width: 70px !important;
            height: 70px !important;
            min-width: 70px !important;
            min-height: 70px !important;
            max-width: 70px !important;
            max-height: 70px !important;
        }
    }

    .hero-class-badge {
        background: $primary-gradient;
        color: #1a0e0a;
        padding: get($spacings, sm) get($spacings, lg);
        border-radius: get($border-radius, md);
        font-weight: get($font-weights, bold);
        text-transform: uppercase;
        letter-spacing: 0.05em;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);

        @include mobile {
            padding: get($spacings, xs) get($spacings, md);
            font-size: get($font-sizes, sm);
            letter-spacing: 0.03em;
        }

        @include xs {
            padding: get($spacings, xs) get($spacings, sm);
            font-size: get($font-sizes, xs);
        }
    }

    .hero-level {
        color: $primary-gold;
        font-size: get($font-sizes, xl);
        font-weight: get($font-weights, bold);
        text-shadow: 0 0 10px rgba($primary-gold, 0.3);

        @include mobile {
            font-size: get($font-sizes, lg);
        }

        @include xs {
            font-size: get($font-sizes, base);
        }
    }
}

.hero-modal-right {
    @include flex-column;
    gap: get($spacings, lg);

    h3 {
        margin: 0;
        font-size: get($font-sizes, xl);
        font-weight: get($font-weights, bold);
        color: $primary-gold;
        font-family: $font-family-secondary;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        border-bottom: 1px solid rgba($primary-bronze, 0.3);
        padding-bottom: get($spacings, sm);

        @include mobile {
            font-size: get($font-sizes, lg);
            letter-spacing: 0.03em;
        }

        @include xs {
            font-size: get($font-sizes, base);
            letter-spacing: 0.02em;
        }
    }

    .hero-stats-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: get($spacings, md);

        @include tablet {
            gap: get($spacings, sm);
        }

        @include mobile {
            grid-template-columns: 1fr;
        }

        @include xs {
            gap: get($spacings, xs);
        }
    }

    .stat-item {
        background: rgba($bg-secondary, 0.5);
        padding: get($spacings, md);
        border-radius: get($border-radius, sm);
        border: 1px solid rgba($primary-bronze, 0.2);
        @include flex-between;

        @include mobile {
            padding: get($spacings, sm);
        }

        @include xs {
            padding: get($spacings, xs) get($spacings, sm);
        }

        .stat-name {
            color: $text-secondary;
            font-weight: get($font-weights, medium);

            @include mobile {
                font-size: get($font-sizes, sm);
            }

            @include xs {
                font-size: get($font-sizes, xs);
            }
        }

        .stat-value {
            color: $text-primary;
            font-weight: get($font-weights, bold);
            font-size: get($font-sizes, lg);

            @include mobile {
                font-size: get($font-sizes, base);
            }

            @include xs {
                font-size: get($font-sizes, sm);
            }
        }
    }

    .hero-record {
        background: rgba($primary-gold, 0.1);
        padding: get($spacings, lg);
        border-radius: get($border-radius, md);
        border-left: 4px solid $primary-gold;

        .record-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: get($spacings, md);
            margin-top: get($spacings, md);

            @include mobile {
                grid-template-columns: 1fr;
                gap: get($spacings, sm);
            }
        }

        .record-item {
            text-align: center;

            .record-number {
                display: block;
                font-size: get($font-sizes, xl);
                font-weight: get($font-weights, bold);
                color: $primary-gold;
            }

            .record-label {
                font-size: get($font-sizes, sm);
                color: $text-secondary;
                text-transform: uppercase;
                letter-spacing: 0.05em;
            }
        }
    }
}

// Responsive
@include mobile {
    .modal-overlay {
        padding: get($spacings, sm);
    }

    .modal-content {
        margin: get($spacings, lg) auto;
        max-width: none;
    }

    .modal-header {
        padding: get($spacings, md) 40px get($spacings, md) get($spacings, md);
    }

    .modal-close {
        top: get($spacings, sm);
        right: get($spacings, sm);
        width: 28px;
        height: 28px;
        font-size: 16px;
    }

    .action-buttons {
        grid-template-columns: 1fr;
        gap: get($spacings, sm);
    }

    .action-btn {
        padding: get($spacings, sm);

        .action-icon {
            font-size: get($font-sizes, lg);
            margin-right: get($spacings, sm);
            min-width: 28px;
        }

        .action-text {
            strong {
                font-size: 0.9rem;
            }

            small {
                font-size: get($font-sizes, xs);
            }
        }
    }

    .hero-modal {
        width: 95%;
        max-height: 90vh;
    }

    .hero-modal-content {
        grid-template-columns: 1fr;
        padding: get($spacings, md);
    }

    .hero-modal-left {
        padding: get($spacings, md);
    }
}

// Combat Result Modal - Winner announcement styles
.combat-result-content {
    .combat-result-header {
        text-align: center;
        padding: get($spacings, lg);
        border-bottom: 1px solid rgba($primary-bronze, 0.3);

        h2 {
            margin: 0;
            font-size: get($font-sizes, 2xl);
            font-weight: get($font-weights, bold);
            color: $primary-gold;
            text-shadow: 0 0 15px rgba($primary-gold, 0.5);
            margin-bottom: get($spacings, sm);
        }

        p {
            color: $text-primary;
            font-size: get($font-sizes, lg);
            font-weight: get($font-weights, medium);
            margin: 0;
        }
    }

    .combat-result-body {
        padding: get($spacings, lg);

        .winner-section {
            display: flex;
            justify-content: center;

            .result-hero-card {
                @include flex-column;
                align-items: center;
                gap: get($spacings, md);
                padding: get($spacings, lg);
                background: rgba($primary-gold, 0.1);
                border: 2px solid $primary-gold;
                border-radius: get($border-radius, lg);
                box-shadow: 0 8px 24px rgba($primary-gold, 0.3);

                .hero-avatar-result {
                    width: 80px !important;
                    height: 80px !important;
                    min-width: 80px !important;
                    min-height: 80px !important;
                    max-width: 80px !important;
                    max-height: 80px !important;
                    border-radius: get($border-radius, md);
                    border: 2px solid $primary-bronze;
                    background: $bg-glass;
                    overflow: hidden;
                    position: relative;
                    flex-shrink: 0;
                    flex-grow: 0;
                    box-shadow:
                        0 4px 12px rgba(0, 0, 0, 0.4),
                        inset 0 1px 0 rgba($primary-gold, 0.3);

                    img {
                        position: absolute;
                        top: 0;
                        left: 0;
                        width: 100% !important;
                        height: 100% !important;
                        object-fit: cover;
                        object-position: center;
                        border-radius: calc(#{get($border-radius, md)} - 2px);
                    }
                }

                .hero-info {
                    text-align: center;

                    .hero-name {
                        font-size: get($font-sizes, lg);
                        font-weight: get($font-weights, bold);
                        color: $text-primary;
                        margin-bottom: get($spacings, xs);
                    }

                    .hero-level {
                        color: $primary-gold;
                        font-weight: get($font-weights, semibold);
                    }
                }
            }
        }
    }
}

// ========== MODAL DE PRÉVISUALISATION D'AVATAR ==========

.avatar-preview-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: get($z-indexes, modal) + 10;
    opacity: 0;
    animation: modalFadeIn 0.2s ease forwards;
}

.avatar-preview-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.9);
    @include flex-center;
    cursor: pointer;
}

.avatar-preview-content {
    position: relative;
    max-width: 90vw;
    max-height: 90vh;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: default;
    background: rgba(26, 22, 18, 0.8);
    border-radius: get($border-radius, lg);
    border: 3px solid $primary-gold;
    box-shadow:
        0 20px 60px rgba(0, 0, 0, 0.5),
        0 0 40px rgba(212, 175, 55, 0.3),
        inset 0 1px 0 rgba(212, 175, 55, 0.2);
    backdrop-filter: blur(10px);
    padding: get($spacings, lg);

    @include mobile {
        max-width: 95vw;
        max-height: 95vh;
        padding: get($spacings, md);
    }
}

.avatar-preview-close {
    position: absolute;
    top: -10px;
    right: -10px;
    width: 32px;
    height: 32px;
    border: none;
    border-radius: 50%;
    background: $error;
    color: white;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    @include flex-center;
    box-shadow:
        0 4px 12px rgba(0, 0, 0, 0.3),
        0 0 20px rgba(239, 68, 68, 0.4);
    transition: all get($transitions, fast);
    z-index: 10;

    &:hover {
        transform: scale(1.1);
        background: darken($error, 10%);
        box-shadow:
            0 6px 16px rgba(0, 0, 0, 0.4),
            0 0 30px rgba(239, 68, 68, 0.6);
    }

    &:active {
        transform: scale(0.95);
    }

    @include mobile {
        top: -8px;
        right: -8px;
        width: 36px;
        height: 36px;
        font-size: 20px;
    }
}

.avatar-preview-image {
    max-width: 80%;
    max-height: 80%;
    object-fit: contain;
    border-radius: get($border-radius, md);
    box-shadow:
        0 10px 30px rgba(0, 0, 0, 0.3),
        0 0 20px rgba(212, 175, 55, 0.2);

    // Taille minimum pour assurer une bonne visibilité
    min-width: 200px;
    min-height: 200px;

    @include mobile {
        min-width: 150px;
        min-height: 150px;
    }

    @include xs {
        min-width: 120px;
        min-height: 120px;
    }
}

// ========== MODAL D'ÉDITION DE PROFIL UTILISATEUR ==========

.user-profile-modal {
    .modal-content {
        max-width: 700px;
        max-height: 90vh;
        overflow-y: auto;
    }
}

.user-profile-content {
    .modal-header {
        background: linear-gradient(135deg, rgba(26, 22, 18, 0.9) 0%, rgba(15, 13, 10, 0.95) 100%);
        border-bottom: 2px solid $primary-gold;

        h2 {
            color: $primary-gold;
            font-family: $font-family-secondary;
            text-align: center;
            margin: 0;
            padding: get($spacings, md) 0;
        }
    }
}

.profile-edit-form {
    display: flex;
    flex-direction: column;
    gap: get($spacings, xl);
    padding: get($spacings, lg);
}

.profile-section {
    background: rgba(15, 15, 15, 0.3);
    border: 1px solid rgba(212, 175, 55, 0.2);
    border-radius: get($border-radius, md);
    padding: get($spacings, lg);

    h3 {
        color: $primary-gold;
        font-family: $font-family-secondary;
        margin-bottom: get($spacings, md);
        padding-bottom: get($spacings, sm);
        border-bottom: 1px solid rgba(212, 175, 55, 0.3);
        display: flex;
        align-items: center;
        gap: get($spacings, sm);
    }
}

.current-avatar-display {
    display: flex;
    align-items: center;
    gap: get($spacings, lg);
    margin-bottom: get($spacings, md);

    @include mobile {
        flex-direction: column;
        text-align: center;
    }
}

.user-avatar-large {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    border: 3px solid $primary-gold;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(26, 22, 18, 0.8) 0%, rgba(15, 13, 10, 0.9) 100%);
    box-shadow:
        0 0 20px rgba(212, 175, 55, 0.3),
        inset 0 2px 0 rgba(212, 175, 55, 0.2);

    img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .user-initials {
        font-size: get($font-sizes, xl);
        font-weight: get($font-weights, bold);
        color: $primary-gold;
        text-transform: uppercase;
    }
}

.form-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: get($spacings, lg);

    @include mobile {
        grid-template-columns: 1fr;
        gap: get($spacings, md);
    }
}

.form-group {
    display: flex;
    flex-direction: column;
    gap: get($spacings, sm);

    label {
        color: $text-secondary;
        font-weight: get($font-weights, semibold);
        font-size: get($font-sizes, sm);
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .form-input {
        padding: get($spacings, md);
        background: rgba(10, 10, 10, 0.6);
        border: 1px solid rgba(212, 175, 55, 0.3);
        border-radius: get($border-radius, sm);
        color: $text-primary;
        font-family: $font-family-primary;
        transition: all get($transitions, normal);

        &:focus {
            outline: none;
            border-color: $primary-gold;
            box-shadow: 0 0 10px rgba(212, 175, 55, 0.3);
        }

        &::placeholder {
            color: $text-muted;
        }
    }

    textarea.form-input {
        resize: vertical;
        min-height: 80px;
    }

    .form-help {
        color: $text-muted;
        font-size: get($font-sizes, xs);
        font-style: italic;
    }
}

.stats-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: get($spacings, md);

    @include mobile {
        grid-template-columns: 1fr;
        gap: get($spacings, sm);
    }

    @include xs {
        grid-template-columns: 1fr;
    }
}

.stat-item {
    display: flex;
    align-items: center;
    gap: get($spacings, sm);
    padding: get($spacings, md);
    background: rgba(212, 175, 55, 0.1);
    border: 1px solid rgba(212, 175, 55, 0.2);
    border-radius: get($border-radius, sm);

    .stat-icon {
        font-size: get($font-sizes, lg);
        flex-shrink: 0;
    }

    .stat-label {
        color: $text-muted;
        font-size: get($font-sizes, sm);
        flex: 1;
    }

    .stat-value {
        color: $primary-gold;
        font-weight: get($font-weights, bold);
        font-size: get($font-sizes, base);
    }
}

// ========== MODAL DE SÉLECTION D'AVATAR ==========

.avatar-selector-modal {
    .modal-content {
        max-width: 600px;
        max-height: 80vh;
    }
}

.avatar-selector-content {
    .modal-header {
        text-align: center;

        h2 {
            color: $primary-gold;
            font-family: $font-family-secondary;
        }
    }
}

// Suppression de l'ancien système de boutons et select mobile

#profileAvatarGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    gap: get($spacings, md);
    max-height: 400px;
    overflow-y: auto;
    padding: get($spacings, sm);
    background: rgba(10, 10, 10, 0.3);
    border-radius: get($border-radius, sm);

    .avatar-option {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        border: 2px solid rgba(212, 175, 55, 0.3);
        overflow: hidden;
        cursor: pointer;
        transition: all get($transitions, normal);
        background: rgba(15, 15, 15, 0.5);

        &:hover {
            border-color: $primary-gold;
            box-shadow: 0 0 15px rgba(212, 175, 55, 0.4);
            transform: scale(1.05);
        }

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    }

    @include mobile {
        grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
        gap: get($spacings, sm);

        .avatar-option {
            width: 60px;
            height: 60px;
        }
    }
}

// ========== MODAL DE DÉTAILS DE CLASSE ==========

.class-details {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: get($spacings, xl);
    align-items: start;

    @include tablet {
        grid-template-columns: 1fr;
        gap: get($spacings, lg);
        text-align: center;
    }

    @include mobile {
        gap: get($spacings, md);
    }
}

.class-icon-large {
    font-size: 120px;
    text-align: center;
    padding: get($spacings, xl);
    background: rgba($primary-gold, 0.1);
    border-radius: get($border-radius, lg);
    border: 2px solid rgba($primary-gold, 0.3);
    box-shadow: 
        0 8px 24px rgba(0, 0, 0, 0.3),
        inset 0 1px 0 rgba($primary-gold, 0.2);
    filter: drop-shadow(0 0 20px rgba($primary-gold, 0.3));

    @include tablet {
        font-size: 100px;
        padding: get($spacings, lg);
    }

    @include mobile {
        font-size: 80px;
        padding: get($spacings, md);
    }

    @include xs {
        font-size: 60px;
        padding: get($spacings, sm);
    }
}

.class-info-detailed {
    h3 {
        color: $primary-gold;
        font-family: $font-family-secondary;
        font-size: get($font-sizes, 2xl);
        margin-bottom: get($spacings, xs);
        text-transform: uppercase;
        letter-spacing: 0.05em;

        @include mobile {
            font-size: get($font-sizes, xl);
        }

        @include xs {
            font-size: get($font-sizes, lg);
        }
    }
}

.class-subtitle {
    color: $text-secondary;
    font-size: get($font-sizes, lg);
    font-style: italic;
    margin-bottom: get($spacings, md);
    font-weight: get($font-weights, medium);

    @include mobile {
        font-size: get($font-sizes, base);
        margin-bottom: get($spacings, sm);
    }
}

.class-description {
    color: $text-primary;
    font-size: get($font-sizes, base);
    line-height: 1.6;
    margin-bottom: get($spacings, lg);

    @include mobile {
        font-size: get($font-sizes, sm);
        margin-bottom: get($spacings, md);
    }
}

.class-bonuses, .class-abilities, .class-power-preview {
    margin-bottom: get($spacings, lg);

    h4 {
        color: $text-secondary;
        font-size: get($font-sizes, lg);
        margin-bottom: get($spacings, sm);
        text-transform: uppercase;
        letter-spacing: 0.03em;

        @include mobile {
            font-size: get($font-sizes, base);
        }
    }

    @include mobile {
        margin-bottom: get($spacings, md);
    }
}

.bonus-item {
    display: inline-block;
    padding: get($spacings, xs) get($spacings, md);
    background: rgba($primary-gold, 0.2);
    border: 1px solid rgba($primary-gold, 0.4);
    border-radius: get($border-radius, sm);
    color: $primary-gold;
    font-weight: get($font-weights, bold);
    font-size: get($font-sizes, sm);
    text-shadow: 0 0 8px rgba($primary-gold, 0.3);

    @include mobile {
        padding: get($spacings, xs) get($spacings, sm);
        font-size: get($font-sizes, xs);
    }
}

.class-abilities {
    ul {
        list-style: none;
        padding: 0;
        margin: 0;

        li {
            color: $text-primary;
            padding: get($spacings, xs) 0;
            position: relative;
            padding-left: get($spacings, lg);

            &::before {
                content: '⚡';
                position: absolute;
                left: 0;
                color: $primary-gold;
                font-size: get($font-sizes, sm);
            }

            @include mobile {
                font-size: get($font-sizes, sm);
                padding-left: get($spacings, md);
            }
        }
    }
}

.power-card {
    background: rgba($primary-gold, 0.1);
    border: 1px solid rgba($primary-gold, 0.3);
    border-radius: get($border-radius, md);
    padding: get($spacings, md);
    
    h5 {
        color: $primary-gold;
        font-size: get($font-sizes, lg);
        margin-bottom: get($spacings, xs);
        font-weight: get($font-weights, bold);
        text-transform: uppercase;
        letter-spacing: 0.03em;

        @include mobile {
            font-size: get($font-sizes, base);
        }
    }

    p {
        color: $text-primary;
        font-size: get($font-sizes, sm);
        line-height: 1.5;
        margin: 0;

        @include mobile {
            font-size: get($font-sizes, xs);
        }
    }

    @include mobile {
        padding: get($spacings, sm);
    }
}